DROP DATABASE IF EXISTS dictionary;

CREATE DATABASE dictionary
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'ru_RU.UTF-8'
    LC_CTYPE = 'ru_RU.UTF-8'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = false;

-- Table: public.termin

DROP TABLE IF EXISTS public.termin;

CREATE TABLE IF NOT EXISTS public.termin
(
    id UUID PRIMARY KEY,
	termin text NOT NULL,
	description text NOT NULL,
	is_deleted bool DEFAULT false
)
	
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.termin
    OWNER to postgres;

COMMENT ON TABLE public.termin
    IS 'таблица терминов словаря';

INSERT INTO termin
VALUES
	('146cc351-a823-4294-81ea-f9ebc776e94c', 'API (Application Programming Interface)', 'Набор готовых функций, классов, протоколов и инструментов, предоставляемых программным интерфейсом для взаимодействия с другими приложениями или сервисами.'),
	('f7dc7163-861c-4001-a96c-4c69730c4f1e', 'JVM (Java Virtual Machine)', 'Виртуальная машина Java, которая выполняет байт-код, скомпилированный из программ на языке Java, и обеспечивает платформонезависимость.'),
	('b86609f6-7d04-4126-a5e1-0d7b830bf640', 'Git', 'Распределенная система контроля версий, используемая для управления изменениями в исходном коде программного обеспечения.'),
	('f4dc1ad6-b9c4-4164-a5c8-726c0a369814', 'MVC (Model-View-Controller)', 'Архитектурный шаблон, который разделяет приложение на три компонента: модель (хранение данных и бизнес-логика), представление (отображение данных пользователю) и контроллер, где управление взаимодействием между моделью и представлением.'),
	('550f4cb3-b52d-4a62-a159-970852f9b8a5', 'Алгоритм', '1) Последовательность шагов или инструкций, используемых для решения определенной задачи или выполнения определенной операции. 2) Точно заданная последовательность действий, выполняемых для решения определенной задачи'),
	('20811f7b-5909-4add-a1d0-bc8fa8fc6bc6', 'Отладка (Debugging)', ' Процесс исследования, выявления и исправления ошибок в программном коде. Она позволяет разработчикам искать и устранять ошибки, такие как сбои в работе программы, неправильное поведение или некорректные результаты. Отладка включает использование инструментов, таких как отладчики, логирование, вывод на консоль и систематическое исследование кода для выявления и исправления проблем.'),
	('2c499129-774a-4655-9717-62b07c9f6c20', 'Итерация', 'процесс повторения блока кода или выполнения цикла. Циклы позволяют выполнять один и тот же набор инструкций несколько раз, обычно на основе условия или итерационной переменной.'),
	('b9319bcc-3f03-4e86-a7a4-490bb4b58f91', 'ORM (Object-Relational Mapping)', 'ORM - это технология, которая позволяет программистам работать с реляционными базами данных, используя объектно-ориентированный подход. ORM-фреймворки автоматически отображают таблицы базы данных на классы и объекты в языке программирования.'),
	('c541576b-0b07-48e7-8b28-cd8fe9448af4', 'Многопоточность (Multithreading)', 'Многопоточность - это возможность программы выполнять несколько потоков параллельно. Многопоточные программы могут улучшить производительность и отзывчивость, позволяя выполнять разные задачи одновременно.'),
	('2f708c13-4b36-449e-a63e-91e55f36dda7', 'Программа', '1. Программа - это последовательность инструкций или команд, написанных на языке программирования, которые выполняют определенную задачу или решают определенную проблему в компьютерной системе. 2. Программа - это исполняемый файл, содержащий машинный код, который компьютер может выполнять непосредственно. 3.Программа - это крупная программная система, состоящая из нескольких модулей или компонентов, которые взаимодействуют друг с другом для реализации определенного функционала. 4. Программа - это набор правил и инструкций, определяющих поведение компьютерной системы или устройства для выполнения определенных функций или операций.'),
	('35f52a22-f3f0-4a91-be25-60d7b43800ee', 'Указатель (Pointer)', 'Переменная, которая содержит адрес в памяти другой переменной или объекта. Указатели позволяют работать с данными по их адресам, что может быть полезно при динамическом выделении памяти или передаче данных между функциями.');

UPDATE termin SET is_deleted = true where id = '550f4cb3-b52d-4a62-a159-970852f9b8a5';

INSERT INTO termin
VALUES
    ('c2a6ecb2-3e8a-40de-8b16-1a23fa7401b6', 'Компилятор', 'Программа, переводящая исходный код на более высокоуровневом языке в машинный код', false),
    ('a1b3f4a5-67c8-4f10-9c2e-2f5e9d8ca3b2', 'Интерпретатор', 'Программа, выполняющая исходный код непосредственно, без предварительной компиляции', false),
    ('8d9e2b7c-f3d1-4b7a-b5c0-3a1e2f4b6c8d', 'Переменная', 'Именованная ячейка в памяти компьютера для хранения значений', false),
    ('b5e2f4a6-7c8d-4e1f-9a2b-3c4d5e6f7a8b', 'Функция', 'Именованный блок кода, который можно вызывать для выполнения определенных действий', false),
    ('c9e1d2b3-4a5f-6c7d-8e9f-0a1b2c3d4e5f', 'Класс', 'Шаблон для создания объектов, содержащий данные и методы', false),
    ('d7b2a9c6-5e8f-4d1c-2b3a-9e8f7d6c5b4a', 'Объект', 'Экземпляр класса, обладающий свойствами и методами', false),
    ('e5a2c8b1-3d4f-6e7c-9a2b-4d6e8f0a1b2c', 'Наследование', 'Механизм, при котором новый класс создается на основе существующего', false),
    ('f7c2d1b3-4a5e-6f7c-8d9a-0b1c2d3e4f5a', 'Полиморфизм', 'Возможность объектов разных классов выполнять одинаковые действия', false),
    ('a1b2c3d4-5e6f-7a8b-9c0d-1e2f3a4b5c6d', 'Инкапсуляция', 'Механизм, скрывающий внутреннее устройство объекта от внешнего мира', false),
    ('b8a6c4e2-3f1d-5c7e-9a1b-2c3d4e5f6a7b', 'Интерфейс', 'Описание методов, которые должен реализовывать класс', false),
    ('c5e8a2b1-3d4f-6e7c-8a9b-0c1d2e3f4a5b', 'Исключение', 'Событие, вызванное возникновением ошибки или нестандартной ситуации', false),
    ('e4b1c7d2-3a5e-6f7c-8d9a-0b1c2d3e4f5a', 'Рекурсия', 'Метод решения задач, при котором функция вызывает саму себя', false),
    ('f6a2c1b3-4a5e-6f7c-8d9a-0b1c2d3e4f5a', 'Сортировка', 'Упорядочивание элементов массива или списка по определенному правилу', false),
    ('a7b2c3d4-5e6f-7a8b-9c0d-1e2f3a4b5c6d', 'Сборщик мусора', 'Механизм автоматического высвобождения памяти, занятой неиспользуемыми объектами', false),
    ('b4c1e2a3-5d6f-7a8b-9c0d-1e2f3a4b5c6d', 'Интерфейс пользователя', 'Средства взаимодействия пользователя с программой', false),
    ('c8a2b3d4-5e6f-7a8b-9c0d-1e2f3a4b5c6d', 'Потоки', 'Механизм параллельного выполнения нескольких задач в одном процессе', false),
    ('d5b2a1c3-4e6f-7a8b-9c0d-1e2f3a4b5c6d', 'Шаблоны проектирования', 'Стандартные решения распространенных проблем в объектно-ориентированном программировании', false),
    ('e9c2a4b3-5d6f-7a8b-9c0d-1e2f3a4b5c6d', 'Фреймворк', 'Программная платформа, определяющая структуру приложения', false),
    ('f1b3c2a4-5d6f-7a8b-9c0d-1e2f3a4b5c6d', 'Библиотека', 'Набор готовых функций и классов для решения определенных задач', false),
    ('a5c2b3d4-6e7f-8a9b-0c1d-2e3f4a5b6c7d', 'Модуль', 'Самостоятельная независимая единица программного кода', false),
    ('b7d2a3c5-6e8f-9a1b-2c3d-4e5f6a7b8c9d', 'Событие', 'Действие, на которое может реагировать программа', false),
    ('c9e2a4b6-8d1f-3a5b-7c9d-1e3f5a7b9c0d', 'Триггер', 'Специальная процедура, автоматически вызываемая при изменении данных', false),
    ('d1b3c5a7-9e2f-4a6b-8c0d-2e4f6a8b0c2d', 'Хеш-таблица', 'Структура данных, обеспечивающая быстрый поиск по ключу', false),
    ('d7d40e2b-ccd6-4e24-a2be-48a9c0ca0d28', 'Функциональное программирование', 'Парадигма программирования, которая рассматривает вычисления как оценку математических функций и избегает изменения состояния и изменяемых данных.', false),
    ('3d7fbd1a-8ab6-486f-a2c0-0cf7d7adb6d4', 'Неизменяемые данные', 'Данные, которые не могут быть изменены после их создания.', false),
    ('e1b7a39a-9a88-42b3-a05a-7a13bdeaae74', 'Высокоуровневый язык', 'Язык программирования, который предназначен для человекочитаемости и простоты использования, с функциями, которые абстрагируют от базового оборудования и операционной системы.', false),
    ('b8f53859-06bf-4f43-a8d4-cbb7fc89df83', 'Низкоуровневый язык', 'Язык программирования, который тесно связан с базовым оборудованием и используется для прямого управления операциями компьютера.', false),
    ('36d1fc3d-35fc-4fca-9675-4b1d2e2bba9a', 'Машинное обучение', 'Область искусственного интеллекта, которая позволяет компьютерам обучаться и улучшаться на основе опыта без явного программирования.', true),
    ('f2b6bbc8-2c91-4c23-a14c-fa0bef1b7bd5', 'Нейронная сеть', 'Модель машинного обучения, вдохновленная структурой и функцией человеческого мозга.', false),
    ('a8f1ac28-fc7e-4a58-8e64-524d17c4d836', 'Тензор', 'Многомерный массив, используемый в машинном обучении и глубоком обучении.', false),
    ('ac20b7d9-1443-4a85-9c78-0ef2f6ef4753', 'Регрессия', 'Метод машинного обучения, используемый для прогнозирования непрерывной выходной переменной на основе одной или нескольких входных переменных.', false),
    ('4e4d1f4d-8b9d-4b9f-af98-4ba70c35d10f', 'Классификация', 'Метод машинного обучения, используемый для прогнозирования дискретной выходной переменной (класса) на основе одной или нескольких входных переменных.', false),
    ('0c5cba66-e408-46d1-8e09-5f27f9bfb56f', 'Кластеризация', 'Метод машинного обучения, используемый для группировки похожих данных вместе на основе их характеристик.', true),
    ('7cbe3fe1-af4d-4d05-8c8e-d80afb1b9bb7', 'Большие данные', 'Чрезвычайно большие наборы данных, которые могут быть вычислительно проанализированы для выявления моделей, тенденций и связей.', false),
    ('2c1efd27-5692-4613-ad2c-2f02ae43c35e', 'Визуализация данных', 'Представление данных в графическом формате, облегчающее понимание и интерпретацию сложной информации.', false),
    ('b1ceec5b-6abf-44b3-9dbc-8ff07ad1d6dc', 'Гибкая методология', 'Набор принципов и практик, поощряющих итерационную и инкрементальную разработку, сотрудничество и гибкость в разработке программного обеспечения.', false),
    ('67fca2b9-06ce-46e3-9dcb-0a270e31f96f', 'Scrum', 'Основа для реализации гибкой методологии разработки программного обеспечения, ориентированная на командную работу, подотчетность и непрерывное совершенствование.', false),
    ('fb66c6fd-d785-4ad9-bcb5-ff40c49a1f95', 'Kanban', 'Визуальная система управления рабочими процессами, помогающая командам управлять и улучшать поток работы.', false),
    ('12e8ccc1-7d8c-4c11-85bf-d7ef7f5ab4fc', 'DevOps', 'Набор практик, объединяющих разработку программного обеспечения и IT-операции для сокращения жизненного цикла систем и обеспечения непрерывной поставки высококачественного ПО.', false),
    ('9d76b9f9-5f1f-4d2a-9bff-fea7fc1b3f3b', 'Микросервисы', 'Архитектурный стиль, при котором приложение структурируется как совокупность слабосвязанных сервисов, каждый из которых работает в своем процессе и взаимодействует через легкие механизмы.', false),
    ('c4a7b07d-c3fd-4e47-9e70-fed1d8072d7e', 'Серверные вычисления', 'Модель облачных вычислений, при которой облачный провайдер динамически управляет выделением и обеспечением серверов.', false),
    ('6c099a4a-f83a-4af6-85f4-79c4d5be5bca', 'Интернет вещей (IoT)', 'Сеть взаимосвязанных устройств, которые могут собирать и обмениваться данными.', false),
    ('a8d40a4e-7f2e-4305-ac9f-95bcc4ab97a6', 'Блокчейн', 'Распределенный, децентрализованный, публичный цифровой реестр, используемый для записи транзакций на множестве компьютеров в сети.', false);



